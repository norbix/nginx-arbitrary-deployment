#HINT: contract
global:
  containerRegistry: "REPLACE"
  domain: nip.io
  subdomain:
    enabled: true
    override: ""
  tls:
    enabled: false
  ingress:
    annotations: { }

# Default values for nginx-arbitrary-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# HINT: component
frontend:
  replicaCount: 1

  image:
    repository: nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: [ ]
  nameOverride: "nginx-arbitrary-deployment-frontend"
  fullnameOverride: "nginx-arbitrary-deployment-frontend"

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
    # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: NodePort                                                                                                      #HINT: also gets ClusterIP
    port: 80
    name: nginx-sofixit                                                                                                 #NOTE: hack just for the purpose of demo

  ingress:
    enabled: false
    className: ""
    annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  configMap:
    enabled: true
    annotations: { }
    nginxConf: |
      user  nginx;
      worker_processes  1;

      error_log  /var/log/nginx/error.log warn;
      pid        /var/run/nginx.pid;


      events {
      worker_connections  1024;
      }

      http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;
      include /etc/nginx/conf.d/*.conf;
      #include /mnt3/nginx/default.conf;
      }

    defaultConf: |
      server {
          listen       80;
          server_name  localhost;

          #charset koi8-r;
          #access_log  /var/log/nginx/host.access.log  main;

          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
              auth_basic  "AuthN Challenge"
              auth_basic_user_file /.htpasswd
          }

          #error_page  404              /404.html;

          # redirect server error pages to the static page /50x.html
          #
          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
              root   /usr/share/nginx/html;
          }
      }

    htpasswd: |
      user1:$apr1$R26UycDQ$m0mZ2c.dp/gBLSgJUVl87.